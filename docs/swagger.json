{
    "swagger": "2.0",
    "info": {
        "title": "Jaga Asset Management API",
        "contact": {}
    },
    "paths": {
        "/v1/asset-categories": {
            "get": {
                "description": "Retrieve a list of asset categories",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Asset Categories"
                ],
                "summary": "Get list of asset categories",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.GetAssetCategoriesResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new asset category with a specified name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Asset Categories"
                ],
                "summary": "Create a new asset category",
                "parameters": [
                    {
                        "description": "Asset category request",
                        "name": "assetCategoryRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateAssetCategoryRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.CreateAssetCategoryResponse"
                        }
                    }
                }
            }
        },
        "/v1/asset-categories/{id}": {
            "get": {
                "description": "Retrieve an asset category by its unique ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Asset Categories"
                ],
                "summary": "Get asset category by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Asset Category ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.GetAssetCategoryByIDResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing asset category by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Asset Categories"
                ],
                "summary": "Update an asset category",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Asset Category ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update asset category request",
                        "name": "assetCategoryRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateAssetCategoryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateAssetCategoryResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an asset category by its unique ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Asset Categories"
                ],
                "summary": "Delete an asset category",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Asset Category ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.DeleteAssetCategoryResponse"
                        }
                    }
                }
            }
        },
        "/v1/assets": {
            "get": {
                "description": "Retrieve a list of assets with pagination and optional filters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Assets"
                ],
                "summary": "Get list of assets",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.GetAssetsResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new asset with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Assets"
                ],
                "summary": "Create a new asset",
                "parameters": [
                    {
                        "description": "Create asset request",
                        "name": "assetRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateAssetRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.CreateAssetResponse"
                        }
                    }
                }
            }
        },
        "/v1/assets/{id}": {
            "get": {
                "description": "Retrieve an asset by its unique ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Assets"
                ],
                "summary": "Get asset by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Asset ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.GetAssetByIDResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update the details of an existing asset by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Assets"
                ],
                "summary": "Update an existing asset",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Asset ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update asset request",
                        "name": "assetRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateAssetRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateAssetResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an asset by its unique ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Assets"
                ],
                "summary": "Delete an asset",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Asset ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.DeleteAssetResponse"
                        }
                    }
                }
            }
        },
        "/v1/assets/{id}/status": {
            "put": {
                "description": "Update the status of an asset by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Assets"
                ],
                "summary": "Update the status of an asset",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Asset ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update asset status request",
                        "name": "statusRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateAssetStatusRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateAssetResponse"
                        }
                    }
                }
            }
        },
        "/v1/login": {
            "post": {
                "description": "Login with email and password, and receive a JWT token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Login user",
                "parameters": [
                    {
                        "description": "Login request",
                        "name": "loginRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.LoginResponse"
                        }
                    }
                }
            }
        },
        "/v1/maintenance-records": {
            "get": {
                "description": "Retrieve maintenance records with optional filters and pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MaintenanceRecords"
                ],
                "summary": "Get a list of maintenance records",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.GetMaintenanceRecordsResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a maintenance record for an asset",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MaintenanceRecords"
                ],
                "summary": "Create a new maintenance record",
                "parameters": [
                    {
                        "description": "Create Maintenance Record",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateMaintenanceRecordRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.CreateMaintenanceRecordResponse"
                        }
                    }
                }
            }
        },
        "/v1/maintenance-records/{id}": {
            "get": {
                "description": "Retrieve a maintenance record by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MaintenanceRecords"
                ],
                "summary": "Get a maintenance record by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Maintenance Record ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.GetMaintenanceRecordByIDResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update the details of an existing maintenance record",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MaintenanceRecords"
                ],
                "summary": "Update an existing maintenance record",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Maintenance Record ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Maintenance Record",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateMaintenanceRecordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateMaintenanceRecordResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete the maintenance record identified by the ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MaintenanceRecords"
                ],
                "summary": "Delete a maintenance record by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Maintenance Record ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.DeleteMaintenanceRecordResponse"
                        }
                    }
                }
            }
        },
        "/v1/maintenance-records/{id}/status": {
            "put": {
                "description": "Update the status of a specific maintenance record",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MaintenanceRecords"
                ],
                "summary": "Update the status of a maintenance record",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Maintenance Record ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Maintenance Record Status",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateMaintenanceRecordStatusRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateMaintenanceRecordResponse"
                        }
                    }
                }
            }
        },
        "/v1/maintenance-schedules": {
            "get": {
                "description": "Retrieve a paginated list of maintenance schedules",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MaintenanceSchedules"
                ],
                "summary": "Get maintenance schedules",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.GetMaintenanceSchedulesResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new maintenance schedule for a specific asset",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MaintenanceSchedules"
                ],
                "summary": "Create a new maintenance schedule",
                "parameters": [
                    {
                        "description": "Create Maintenance Schedule Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateMaintenanceScheduleRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.CreateMaintenanceScheduleResponse"
                        }
                    }
                }
            }
        },
        "/v1/maintenance-schedules/{id}": {
            "get": {
                "description": "Retrieve a maintenance schedule using its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MaintenanceSchedules"
                ],
                "summary": "Get a maintenance schedule by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Maintenance Schedule ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.GetMaintenanceScheduleByIDResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing maintenance schedule by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MaintenanceSchedules"
                ],
                "summary": "Update a maintenance schedule",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Maintenance Schedule ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Maintenance Schedule Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateMaintenanceScheduleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateMaintenanceScheduleResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an existing maintenance schedule by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MaintenanceSchedules"
                ],
                "summary": "Delete a maintenance schedule",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Maintenance Schedule ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.DeleteMaintenanceScheduleResponse"
                        }
                    }
                }
            }
        },
        "/v1/users": {
            "get": {
                "description": "Retrieve list of users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get list of users",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.GetUsersResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new user with a specified role and credentials",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Create a new user",
                "parameters": [
                    {
                        "description": "Create User",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.CreateUserResponse"
                        }
                    }
                }
            }
        },
        "/v1/users/{id}": {
            "get": {
                "description": "Retrieve user details by their unique ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get user by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.GetUserByIDResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing user's information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Update user information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update User",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateUserResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a user by their unique ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Delete user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.DeleteUserResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.AssetCategoryDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "dto.AssetDTO": {
            "type": "object",
            "properties": {
                "added_by": {
                    "type": "string"
                },
                "category_id": {
                    "type": "string"
                },
                "category_name": {
                    "type": "string"
                },
                "condition": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "last_maintenance_date": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "purchase_date": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "dto.CreateAssetCategoryRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 2
                }
            }
        },
        "dto.CreateAssetCategoryResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "dto.CreateAssetRequest": {
            "type": "object",
            "required": [
                "added_by",
                "category_id",
                "name",
                "status"
            ],
            "properties": {
                "added_by": {
                    "type": "string"
                },
                "category_id": {
                    "type": "string"
                },
                "condition": {
                    "type": "string",
                    "maxLength": 50
                },
                "last_maintenance_date": {
                    "type": "string"
                },
                "location": {
                    "type": "string",
                    "maxLength": 100
                },
                "name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 2
                },
                "purchase_date": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "ready",
                        "under_maintenance",
                        "need_maintenance"
                    ]
                }
            }
        },
        "dto.CreateAssetResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "dto.CreateMaintenanceRecordRequest": {
            "type": "object",
            "required": [
                "asset_id",
                "description",
                "maintenance_date",
                "status"
            ],
            "properties": {
                "asset_id": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "maxLength": 500,
                    "minLength": 5
                },
                "maintenance_date": {
                    "type": "string"
                },
                "performed_by": {
                    "type": "string"
                },
                "schedule_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "pending",
                        "in_progress",
                        "on_hold",
                        "finished",
                        "failed",
                        "cancelled"
                    ]
                }
            }
        },
        "dto.CreateMaintenanceRecordResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "dto.CreateMaintenanceScheduleRequest": {
            "type": "object",
            "required": [
                "asset_id",
                "next_maintenance_date",
                "schedule_type"
            ],
            "properties": {
                "asset_id": {
                    "type": "string"
                },
                "assigned_to": {
                    "type": "string"
                },
                "interval_days": {
                    "type": "integer"
                },
                "next_maintenance_date": {
                    "type": "string"
                },
                "schedule_type": {
                    "type": "string",
                    "enum": [
                        "periodic",
                        "conditional"
                    ]
                },
                "scheduled_by": {
                    "type": "string"
                }
            }
        },
        "dto.CreateMaintenanceScheduleResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "dto.CreateUserRequest": {
            "type": "object",
            "required": [
                "email",
                "name",
                "password",
                "role"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 8
                },
                "role": {
                    "type": "string",
                    "enum": [
                        "super_user",
                        "admin",
                        "technician",
                        "manager"
                    ]
                }
            }
        },
        "dto.CreateUserResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "dto.DeleteAssetCategoryResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "dto.DeleteAssetResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "dto.DeleteMaintenanceRecordResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "dto.DeleteMaintenanceScheduleResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "dto.DeleteUserResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "dto.GetAssetByIDResponse": {
            "type": "object",
            "properties": {
                "asset": {
                    "$ref": "#/definitions/dto.AssetDTO"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "dto.GetAssetCategoriesResponse": {
            "type": "object",
            "properties": {
                "asset_categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.AssetCategoryDTO"
                    }
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "dto.GetAssetCategoryByIDResponse": {
            "type": "object",
            "properties": {
                "asset_category": {
                    "$ref": "#/definitions/dto.AssetCategoryDTO"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "dto.GetAssetsResponse": {
            "type": "object",
            "properties": {
                "assets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.AssetDTO"
                    }
                },
                "items_per_page": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "page": {
                    "type": "integer"
                },
                "total_items": {
                    "type": "integer"
                },
                "total_pages": {
                    "type": "integer"
                }
            }
        },
        "dto.GetMaintenanceRecordByIDResponse": {
            "type": "object",
            "properties": {
                "maintenance_record": {
                    "$ref": "#/definitions/dto.MaintenanceRecordDTO"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "dto.GetMaintenanceRecordsResponse": {
            "type": "object",
            "properties": {
                "items_per_page": {
                    "type": "integer"
                },
                "maintenance_records": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.MaintenanceRecordDTO"
                    }
                },
                "message": {
                    "type": "string"
                },
                "page": {
                    "type": "integer"
                },
                "total_items": {
                    "type": "integer"
                },
                "total_pages": {
                    "type": "integer"
                }
            }
        },
        "dto.GetMaintenanceScheduleByIDResponse": {
            "type": "object",
            "properties": {
                "maintenance_schedule": {
                    "$ref": "#/definitions/dto.MaintenanceScheduleDTO"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "dto.GetMaintenanceSchedulesResponse": {
            "type": "object",
            "properties": {
                "items_per_page": {
                    "type": "integer"
                },
                "maintenance_schedules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.MaintenanceScheduleDTO"
                    }
                },
                "message": {
                    "type": "string"
                },
                "page": {
                    "type": "integer"
                },
                "total_items": {
                    "type": "integer"
                },
                "total_pages": {
                    "type": "integer"
                }
            }
        },
        "dto.GetUserByIDResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/dto.UserDTO"
                }
            }
        },
        "dto.GetUsersResponse": {
            "type": "object",
            "properties": {
                "items_per_page": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "page": {
                    "type": "integer"
                },
                "total_items": {
                    "type": "integer"
                },
                "total_pages": {
                    "type": "integer"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.UserDTO"
                    }
                }
            }
        },
        "dto.LoginRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "dto.LoginResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "dto.MaintenanceRecordDTO": {
            "type": "object",
            "properties": {
                "asset_id": {
                    "type": "string"
                },
                "asset_name": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "maintenance_date": {
                    "type": "string"
                },
                "performed_by_user_id": {
                    "type": "string"
                },
                "performed_by_user_name": {
                    "type": "string"
                },
                "schedule_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "dto.MaintenanceScheduleDTO": {
            "type": "object",
            "properties": {
                "asset_id": {
                    "type": "string"
                },
                "asset_name": {
                    "type": "string"
                },
                "assigned_to": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "interval_days": {
                    "type": "integer"
                },
                "next_maintenance_date": {
                    "type": "string"
                },
                "schedule_type": {
                    "type": "string"
                },
                "scheduled_by": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "dto.UpdateAssetCategoryRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 2
                }
            }
        },
        "dto.UpdateAssetCategoryResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "dto.UpdateAssetRequest": {
            "type": "object",
            "properties": {
                "added_by": {
                    "type": "string"
                },
                "category_id": {
                    "type": "string"
                },
                "condition": {
                    "type": "string",
                    "maxLength": 50
                },
                "last_maintenance_date": {
                    "type": "string"
                },
                "location": {
                    "type": "string",
                    "maxLength": 100
                },
                "name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 2
                },
                "purchase_date": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "ready",
                        "under_maintenance",
                        "need_maintenance"
                    ]
                }
            }
        },
        "dto.UpdateAssetResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "dto.UpdateAssetStatusRequest": {
            "type": "object",
            "required": [
                "status"
            ],
            "properties": {
                "status": {
                    "type": "string",
                    "enum": [
                        "ready",
                        "under_maintenance",
                        "need_maintenance"
                    ]
                }
            }
        },
        "dto.UpdateMaintenanceRecordRequest": {
            "type": "object",
            "properties": {
                "asset_id": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "maxLength": 500,
                    "minLength": 5
                },
                "maintenance_date": {
                    "type": "string"
                },
                "performed_by": {
                    "type": "string"
                },
                "schedule_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "pending",
                        "in_progress",
                        "on_hold",
                        "finished",
                        "failed",
                        "cancelled"
                    ]
                }
            }
        },
        "dto.UpdateMaintenanceRecordResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "dto.UpdateMaintenanceRecordStatusRequest": {
            "type": "object",
            "required": [
                "status"
            ],
            "properties": {
                "status": {
                    "type": "string",
                    "enum": [
                        "pending",
                        "in_progress",
                        "on_hold",
                        "finished",
                        "failed",
                        "cancelled"
                    ]
                }
            }
        },
        "dto.UpdateMaintenanceScheduleRequest": {
            "type": "object",
            "properties": {
                "assigned_to": {
                    "type": "string"
                },
                "interval_days": {
                    "type": "integer"
                },
                "next_maintenance_date": {
                    "type": "string"
                },
                "schedule_type": {
                    "type": "string",
                    "enum": [
                        "periodic",
                        "conditional"
                    ]
                },
                "scheduled_by": {
                    "type": "string"
                }
            }
        },
        "dto.UpdateMaintenanceScheduleResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "dto.UpdateUserRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 8
                },
                "role": {
                    "type": "string",
                    "enum": [
                        "super_user",
                        "admin",
                        "technician",
                        "manager"
                    ]
                }
            }
        },
        "dto.UpdateUserResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "dto.UserDTO": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                }
            }
        }
    }
}